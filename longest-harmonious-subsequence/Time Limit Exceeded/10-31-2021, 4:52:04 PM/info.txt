{"id":580109274,"lang":"python3","time":"1 month, 1 week","timestamp":1635713524,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/580109274/","is_pending":"Not Pending","title":"Longest Harmonious Subsequence","memory":"N/A","code":"class Solution:\n    def findLHS(self, nums: List[int]) -> int:\n        index2value = {}\n        maxlist = []\n        for i in range(len(nums)):\n            index2value[i] = nums[i]\n        nums2 = nums\n        nums_uniq = [int(n) for n in set(nums2)]\n        nums_uniq.sort()\n        print(nums_uniq)\n        for i in range(len(nums_uniq)-1):\n            if nums_uniq[i+1] - nums_uniq[i] == 1:\n                indice = []\n                for index, value in index2value.items():\n                    if value == nums_uniq[i] or value == nums_uniq[i+1]:\n                        indice.append(index)\n                maxlist.append(len(indice))\n        maxlist.sort()\n        if maxlist:\n            return maxlist[-1]\n        else:\n            return 0\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000","title_slug":"longest-harmonious-subsequence"}
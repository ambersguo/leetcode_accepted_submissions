{"id":585065686,"lang":"python3","time":"1Â month","timestamp":1636559463,"status_display":"Accepted","runtime":"232 ms","url":"/submissions/detail/585065686/","is_pending":"Not Pending","title":"Degree of an Array","memory":"16.5 MB","code":"from collections import defaultdict\nclass Solution:\n    def findShortestSubArray(self, nums: List[int]) -> int:\n        num2indice = defaultdict(list)\n        num2count = defaultdict(lambda:0)\n        max_nums = []\n        lengths = []\n        for i in range(len(nums)):\n            num2indice[nums[i]].append(i)\n            num2count[nums[i]] += 1\n        degree = max(num2count.values())\n        for key, value in num2count.items():\n            if value == degree:\n                max_nums.append(key)\n        for num in max_nums:\n            num2indice[num].sort()\n            length = num2indice[num][-1] - num2indice[num][0] + 1\n            lengths.append(length)\n        lengths.sort()\n        return lengths[0]\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"degree-of-an-array"}
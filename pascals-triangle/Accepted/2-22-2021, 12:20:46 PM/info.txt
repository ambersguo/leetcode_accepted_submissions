{"id":459314455,"lang":"python3","time":"9 months, 3 weeks","timestamp":1614014446,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/459314455/","is_pending":"Not Pending","title":"Pascal's Triangle","memory":"14.3 MB","code":"class Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n            n = 0\n            list1 = [1]\n            list2 = []\n            while n < numRows:\n                if n == 0:\n                    yield list1\n                else:\n                    pre = 0\n                    list2 = []\n                    if n > 0:\n                        for value in list1:\n                            new_value = pre + value\n                            pre = value\n                            list2.append(new_value)\n                        list2.append(1)\n                        list1 = list2\n                    yield list2\n                n = n+1\n            return 'done'\n        \n        ","compare_result":"11111111111111","title_slug":"pascals-triangle"}
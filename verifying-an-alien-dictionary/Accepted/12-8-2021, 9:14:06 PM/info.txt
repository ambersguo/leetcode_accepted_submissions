{"id":599123536,"lang":"python3","time":"5 days, 12 hours","timestamp":1639016046,"status_display":"Accepted","runtime":"47 ms","url":"/submissions/detail/599123536/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"14.4 MB","code":"class Solution:\n    def isAlienSorted(self, words: List[str], order: str) -> bool:\n        letter2order = {}\n        for i in range(len(order)):\n            letter2order[order[i]] = i\n        for word in words:\n            if word == words[0]:\n                pre = word\n                next\n            min_len = min(len(word), len(pre))\n            check = 0\n            for i in range(min_len):\n                if letter2order[word[i]] > letter2order[pre[i]]:\n                    check = 1\n                    break\n                elif letter2order[word[i]] == letter2order[pre[i]]:\n                    next   \n                else:\n                    return False\n            if not check:\n                if len(word) < len(pre):\n                    return False\n            pre = word\n        return True\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary"}
{"id":585300857,"lang":"python3","time":"1Â month","timestamp":1636597778,"status_display":"Accepted","runtime":"68 ms","url":"/submissions/detail/585300857/","is_pending":"Not Pending","title":"Flood Fill","memory":"14.6 MB","code":"class Solution:\n    def colorChange(self, image: List[List[int]], sr: int, sc: int, oldColor: int) -> List[list[int]]:\n        m = len(image)\n        n = len(image[0])\n        changes = []\n        connectors = [[sr-1,sc], [sr+1, sc], [sr, sc-1], [sr, sc+1]]\n        for i_j in connectors:\n            i = i_j[0]\n            j = i_j[1]\n            if i>=0 and i<=m-1 and j>=0 and j<= n-1: \n                if image[i][j] == oldColor:\n                    changes.append([i, j])\n        return changes\n\n    def floodFill(self, image: List[List[int]], sr: int, sc: int, newColor: int) -> List[List[int]]:\n        m = len(image)\n        n = len(image[0])\n        oldColor = image[sr][sc]\n        image[sr][sc] = newColor\n        if oldColor == newColor:\n            return image\n        changes = self.colorChange(image, sr, sc, oldColor)\n\n        while changes:\n            changes_new = []\n            for i_j in changes:\n                i = i_j[0]\n                j = i_j[1]\n                image[i][j] = newColor\n                changes_new += self.colorChange(image, i, j, oldColor)\n            changes = changes_new\n        return image\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill"}